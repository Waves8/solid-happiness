#!/bin/bash

# I have adapted from the original below:

# Simple SHELL script for Linux and UNIX system monitoring with
# ping command
# -------------------------------------------------------------------------
# Copyright (c) 2006 nixCraft project
# This script is licensed under GNU GPL version 2.0 or above
# -------------------------------------------------------------------------
# This script is part of nixCraft shell script collection (NSSC)
# Visit http://bash.cyberciti.biz/ for more information.
# -------------------------------------------------------------------------
# Setup email ID below
# See URL for more info:
# http://www.cyberciti.biz/tips/simple-linux-and-unix-system-monitoring-with-ping-command-and-scripts.html
# -------------------------------------------------------------------------

# This script has been edited, see the URL above for the original

#set -x

token="X-Cachet-Token: TOKENHERE"

# add ip / hostname separated by white space
HOSTS=$(cat /PATH/TO/FILE)

# no of ping request
COUNT=10

val=1
for myHost in $HOSTS
do
  archivo="/PATH/TO/LOGGING/ping_check_results/$myHost.txt_$(date +%Y%m%d%H%M%S)"
  date > $archivo
  ping -c $COUNT $myHost >> $archivo
  count=$(cat $archivo | grep 'received' | awk -F',' '{ print $2 }' | awk '{ print $1 }')

    case $count in
      [012])
        # Down
        curl -H "Content-Type: application/json" -H "X-Cachet-Token: TOKENHERE" -X PUT -d '{"status":4}' http://127.0.0.1/api/v1/components/$val
    ;;
      [345])
        # Major
        curl -H "Content-Type: application/json" -H "X-Cachet-Token: TOKENHERE" -X PUT -d '{"status":3}' http://127.0.0.1/api/v1/components/$val
    ;;
      [678])
        # Minor
        curl -H "Content-Type: application/json" -H "X-Cachet-Token: TOKENHERE" -X PUT -d '{"status":2}' http://127.0.0.1/api/v1/components/$val
    ;;
      [9]|[1][0])
        # Good
        curl -H "Content-Type: application/json" -H "X-Cachet-Token: TOKENHERE" -X PUT -d '{"status":1}' http://127.0.0.1/api/v1/components/$val
    ;;
      *)
        echo "Response out of range for $myHost" >> $archivo
    ;;
esac

  a=$val
  val=$(expr $a + 1)
done

#set +x
